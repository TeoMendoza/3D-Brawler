// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

// This was generated using spacetimedb cli version 1.3.0 (commit cc4a165627f041ba50c7554361a549373876a90d).

#nullable enable

using System;
using SpacetimeDB.ClientApi;
using System.Collections.Generic;
using System.Runtime.Serialization;

namespace SpacetimeDB.Types
{
    public sealed partial class RemoteReducers : RemoteBase
    {
        public delegate void SpawnProjectileHandler(ReducerEventContext ctx, DbVector3 direction, DbVector3 spawnPoint);
        public event SpawnProjectileHandler? OnSpawnProjectile;

        public void SpawnProjectile(DbVector3 direction, DbVector3 spawnPoint)
        {
            conn.InternalCallReducer(new Reducer.SpawnProjectile(direction, spawnPoint), this.SetCallReducerFlags.SpawnProjectileFlags);
        }

        public bool InvokeSpawnProjectile(ReducerEventContext ctx, Reducer.SpawnProjectile args)
        {
            if (OnSpawnProjectile == null)
            {
                if (InternalOnUnhandledReducerError != null)
                {
                    switch (ctx.Event.Status)
                    {
                        case Status.Failed(var reason): InternalOnUnhandledReducerError(ctx, new Exception(reason)); break;
                        case Status.OutOfEnergy(var _): InternalOnUnhandledReducerError(ctx, new Exception("out of energy")); break;
                    }
                }
                return false;
            }
            OnSpawnProjectile(
                ctx,
                args.Direction,
                args.SpawnPoint
            );
            return true;
        }
    }

    public abstract partial class Reducer
    {
        [SpacetimeDB.Type]
        [DataContract]
        public sealed partial class SpawnProjectile : Reducer, IReducerArgs
        {
            [DataMember(Name = "direction")]
            public DbVector3 Direction;
            [DataMember(Name = "spawnPoint")]
            public DbVector3 SpawnPoint;

            public SpawnProjectile(
                DbVector3 Direction,
                DbVector3 SpawnPoint
            )
            {
                this.Direction = Direction;
                this.SpawnPoint = SpawnPoint;
            }

            public SpawnProjectile()
            {
                this.Direction = new();
                this.SpawnPoint = new();
            }

            string IReducerArgs.ReducerName => "SpawnProjectile";
        }
    }

    public sealed partial class SetReducerFlags
    {
        internal CallReducerFlags SpawnProjectileFlags;
        public void SpawnProjectile(CallReducerFlags flags) => SpawnProjectileFlags = flags;
    }
}
